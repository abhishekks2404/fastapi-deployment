# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Set up secret environment file
      run: |
        echo "${{ secrets.ENV_FILES }}" > .env
        
    # - name: Install dependencies
    #   run: |
    #     python3 -m venv venv  # Create a virtual environment if not already created
    #     source venv/bin/activate
    #     python -m pip install --upgrade pip
    #     pip install -r requirements.txt
        

    # - name: Run FastAPI application
    #   run: |
    #     uvicorn main:app --host 0.0.0.0 --port 8000 &
    #     sleep 5
    # - name: Test FastAPI application
    #   run: |
    #     curl http://localhost:8000/demo  

    # - name: Stop FastAPI application
    #   run: |
    #     pkill uvicorn

    - name: Deploy to EC2 and run FastAPI
      run: |
        ssh -t ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          # Navigate to your project directory on EC2
          sudo apt-get update -y
          sudo apt-get install -y python3 python3-pip python3-venv
          cd /home/ubuntu/actions-runner-server/fastapi_folder/fastapi-deployment  # Replace this with the actual path on your EC2 instance

          # Pull the latest code from GitHub
          git pull origin main

          # Set up your Python environment and dependencies
          python3 -m venv venv  # Create a virtual environment if not already created
          source venv/bin/activate
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt  # Ensure FastAPI and other dependencies are installed
       
          nohup uvicorn main:app --host 0.0.0.0 --port 8000 --reload & & disown # For dev, remove --reload for production
        EOF
